"""Add referral_points and referral_points_history

Revision ID: 5b3faeb8146d
Revises: 5cc6cf68ef68
Create Date: 2024-07-01 14:02:25.512418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '5b3faeb8146d'
down_revision: Union[str, None] = '5cc6cf68ef68'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('referral_points',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('points', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('referral_points_history',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('referral_points_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('point', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['referral_points_id'], ['referral_points.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('rewards', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('rewards', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rewards', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('rewards', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_table('referral_points_history')
    op.drop_table('referral_points')
    # ### end Alembic commands ###
